---
layout: post
title: Ruby 不是什么?
---

Ruby 是什么，Ruby 好在哪里，网上已经有很多文章了。而 Ruby 不是什么，不好在哪里，可能写的人不多。又或者说 Ruby 不好的人其实没用过多久 Ruby（通常是3天），主观文章其实就引发一些嘴仗而已。

所以我想作为一个靠 Ruby 吃饭的程序员写一写 Ruby 不是什么，以免一些人或者团队技术选型的时候陷入一些误区。当然，我说的不一定对，仅供参考。

## Ruby 是什么？

Ruby 是一门很好的语言，语法人性化、简洁、有灵性。Ruby 有一个活跃的社区，在 Web 开发方面经常走在别的社区前面。Ruby 有一个包管理器和很多现成库和工具，开发起来得心应手。

我很喜欢 Ruby。

Ruby 不是什么，下面一一道来，最后你会发现一个共同点。

## Ruby 不能避免写出烂代码

Ruby 代码通常和优美联系起来，浏览大多数有人气的开源项目也会得出这个结论。但是过去 8 个月看到的代码让我认识到，用 Ruby 写出丑陋代码的大有人在，甚至 Ruby on Rails 的各种约束在一些人眼里完全是透明的。用 Ruby 写出好代码不是一件易事，工具怎么用始终掌握在人的手中。最糟糕的情况是什么？是他们根本不知道自己的代码糟糕。

我自己就经常觉得自己的代码很糟糕，比如3个月前工作中写的一块功能我就觉得非常丑陋，急需重构。

那么要怎么写出好代码呢？很简单直接，就是多读多写，多看好的开源项目代码。另外有一个秘诀，就是把自己的代码放到 Github 开源。一旦开源，就会感受到有很多双眼睛看着你的代码，自我要求就会提升，哪怕 watcher 其实就自己一个。

## Ruby 程序员太具个性，以致难以相处

并不是将好的程序员聚在一起就完事了，实际上他们有可能因为太个性而产生反效果。

好的 Ruby 程序员或多或少都有点代码洁癖，有自己的处事方式和方法论。如果都是包容性的性格还好说，反之恰好是相斥的代码癖好的话那很可能火星撞地球。这里面也许没有对错之分，但我的感受是，Ruby 程序员会更固执一些。

顺便说，我是属于容易相斥的一类人，所以我的[2012年展望][1]里面就特别把“包容性”作为第一个要求。

## 编程语言只是程序开发的一部分

说 Ruby 如何，或者 Ruby 不如何，不要忽略一个事实是：程序开发是一个综合工作。

例如，讨论程序快和慢，不要忽略实际抗住性能的架构和缓存；讨论开发效率，不要忽略人员的熟练和配合程度；开发效率再快，也经不起周而复始的改需求。我就试过活生生把一个新项目开发成遗留项目，非常惭愧。

再者，好的程序员当然不会局限在一个技术领域。像 DHH 他们就玩起了 coffescript。

## 那么，Ruby 不是什么？

其实从上面几点看出，Ruby 只是一门语言，其余的就是人的问题了。Ruby 好，但也要看是否在靠谱的人手里。

一篇日志不能也不打算完全阐述我对程序开发的看法，相信 Ruby 真正的适用人群也不会被我上面的写的吓到。

如果有机会回到两年前进行技术选型，我依然会选择 Ruby。毕竟这是目前在机器和人类之间取得最好平衡的语言，而且它有一个很优秀的社区。选择语言，其实就选择了社区。


[1]: http://chloerei.com/2012/01/02/hello-2012/ "你好，2012"
